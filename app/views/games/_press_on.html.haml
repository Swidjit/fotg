#total-value
#grid
  -@vals = [0,0,0,1,1,1,5,5,5,10,10,10,25,25,25,50].shuffle
  -@vals.each do |f|
    =render :partial =>  'grid_piece', :locals => {val:f}

%button{:id => "press"} Press On
:javascript
  var game_id = 4;
  var final_value;
  var score = 0;
  var item;
  if(eligible == "true") {
    $('#press').on('click', function() {
      if (typeof item !== 'undefined') {
        item.find('span').text('0');
      }
      $('#press').hide();
      var startTime = new Date().getTime();
      var interval = setInterval(function(){
          if(new Date().getTime() - startTime > 4000){
              clearInterval(interval);
              if(final_value == 0) {

                var data = {
                  score: score,
                  session_id: $.cookie('session_id')
                }
                $.post('/games/'+game_id+'/save_score', data);

              }
              else {
                if(score == 0) {
                  $.get('/games/'+game_id+'/init_score?session_id='+$.cookie('session_id'));
                }
                score += final_value;
                $('.score-value').text(score);
                $('#press').show();

              }
              return;
          }

          var newColor = '#c0c';
          $(".grid-piece").css("background-color","#ccc");
          item = shuffle($(".grid-piece")).slice(0, 1);
          item.css("background-color", newColor);
          final_value = parseInt(item.find('span').text());
          console.log(final_value);
      }, 400);

    });
  }
  else {
    $('#press').on('click', function() {
      $('#ineligible').foundation("reveal","open");
    });
  }

  function shuffle(array) {
    var m = array.length, t, i;

    // While there remain elements to shuffle…
    while (m) {

      // Pick a remaining element…
      i = Math.floor(Math.random() * m--);

      // And swap it with the current element.
      t = array[m];
      array[m] = array[i];
      array[i] = t;
    }

    return array;
  }


