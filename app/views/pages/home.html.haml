-content_for :head do
  %title Good Luck Test
  %meta{:content => "Test Your Luck", :property => "og:title"}
  %meta{:content => "Good Luck", :property => "og:site_name"}
  %meta{:content => "Take an hourly luck test and see how you luck compares to people across the world.", :property => "og:description"}
  %meta{:content => 'Good Luck Test', :property => "title"}
  %meta{:property => "description", :content => 'Is it your lucky day?  Is your overall luck good or bad? Test your luck with these fun quick games and see how lucky you are compared to others across the world. '}
  %meta{:property => 'keywords', :content => 'luck,lucky,good,test,day,exam,how,game,press,lottery,play, competition'}
.row
  .large-12.columns
    #stopwatch
    %input#entry{:type => "text", :placeholder => "type here"}
    #target-text
      this is the
    #output-text
    #wpm
    %div#errors

:javascript
  $(document).on('ready page:load', function(){
      var start_time, end_time;
      var started = false;
      $('input#entry').focus();
      $('input#entry').on("keyup", function(event) {
        if(!started) {
          started = true;
          start_time = new Date().getTime();
          Example1.Timer.play();
        }

        var keycode = (event.keyCode ? event.keyCode : event.which);
        if($(this).val() == $.trim($('#target-text').text())) {
          //ok, its a match
          length = Example1.getTime();
          Example1.Timer.stop();

        }
        if(keycode == '13'){
          //you submitted it
          $('input#entry').prop('disabled', true);
          length = Example1.getTime();
          Example1.Timer.stop();

          //calculate wpm
          end_time = new Date().getTime();
          elapsed_time = (end_time-start_time)/60000;
          console.log(elapsed_time);
          wpm = ($(this).val().length/5)/elapsed_time;
          $('#wpm').text(wpm.toFixed(2));

          //count errors
          errors = 0;
          txt = $(this).val();
          target = $.trim($('#target-text').text());
          for (var i = 0, len = txt.length; i < len; i++) {
            if(txt[i]==target[i]) {
               // do nothing
            }
            else {
              errors++;
            }
          }
          $('#errors').text(errors);
        }
        showTextErrors($(this).val());
      });

      function showTextErrors(txt) {
        html = "";
        target = $.trim($('#target-text').text());
        for (var i = 0, len = txt.length; i < len; i++) {
          if(txt[i]==target[i]) {
             html += "<span>" + txt[i] + "</span>";
          }
          else {
            html += "<span style='color:red'>" + target[i] + "</span>";
          }
        }

        $('#output-text').html(html);
      }
  });
  var Example1 = new (function() {
    var $stopwatch, // Stopwatch element on the page
        incrementTime = 70, // Timer speed in milliseconds
        currentTime = 0, // Current time in hundredths of a second
        updateTimer = function() {
            $stopwatch.html(formatTime(currentTime));
            currentTime += incrementTime / 10;
        },
        init = function() {
            $stopwatch = $('#stopwatch');
            Example1.Timer = $.timer(updateTimer, incrementTime, false);
        };
    this.getTime = function() {
        return currentTime;
      };
    this.resetStopwatch = function() {
        currentTime = 0;
        this.Timer.stop().once();
    };
    $(init);
  });
  function pad(number, length) {
      var str = '' + number;
      while (str.length < length) {str = '0' + str;}
      return str;
  }
  function formatTime(time) {
      var min = parseInt(time / 6000),
          sec = parseInt(time / 100) - (min * 60),
          hundredths = pad(time - (sec * 100) - (min * 6000), 2);
      return (min > 0 ? pad(min, 2) : "00") + ":" + pad(sec, 2) + ":" + hundredths;
  }